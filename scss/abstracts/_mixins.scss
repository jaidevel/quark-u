// File: scss/abstracts/_mixins.scss
// ==============================
// Useful SCSS Mixins for quark-u
// ==============================

// Media query helper - min-width (up)
@mixin respond-up($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value {
    @media (min-width: #{$value}) {
      @content;
    }
  }

  @else {
    @warn "Breakpoint `#{$breakpoint}` not found in \$breakpoints map.";
  }
}

// Media query helper - max-width (down)
@mixin respond-down($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value {
    // Subtract a small amount to avoid overlap
    $max-width: (
      $value - 0.02px
    );

  @media (max-width: #{$max-width}) {
    @content;
  }
}

@else {
  @warn "Breakpoint `#{$breakpoint}` not found in \$breakpoints map.";
}
}

// Media query helper - between two breakpoints
@mixin respond-between($min, $max) {
  $min-value: map-get($breakpoints, $min);
  $max-value: map-get($breakpoints, $max);

  @if $min-value and $max-value {
    $adjusted-max: (
      $max-value - 0.02px
    );

  @media (min-width: #{$min-value}) and (max-width: #{$adjusted-max}) {
    @content;
  }
}

@else {
  @warn "One or both breakpoints `#{$min}` and `#{$max}` not found in \$breakpoints map.";
}
}

// _mixins.scss

// Generic fluid property (universal)
@mixin fluid-size($property, $min-size, $max-size, $min-vw: 360px, $max-vw: 1200px) {
  #{$property}: clamp(#{$min-size},
    calc(#{$min-size} + (#{strip-unit($max-size) - strip-unit($min-size)}) * ((100vw - #{strip-unit($min-vw)}px) / (#{strip-unit($max-vw) - strip-unit($min-vw)}))),
    #{$max-size});
}

// Fluid font-size (clean clamp)
@mixin fluid-font($min-size, $max-size, $min-vw: 360, $max-vw: 1200) {
  $slope: (
    $max-size - $min-size) / ($max-vw - $min-vw) * 100;
  $base: $min-size - ($slope * $min-vw / 100
  );

font-size: clamp(#{$min-size}rem,
  #{$base}rem + #{$slope}vw,
  #{$max-size}rem);
}